import{r as i,j as e,B as n,T as u}from"./index-7JCrVMyd.js";import{c as S}from"./index.esm-Cob4-rpC.js";import{T as z}from"./ToolImageInput-BfRmeQE8.js";import{T}from"./ToolFileResult-Div6pbTm.js";import{T as f}from"./TextFieldWithDesc-D98LnRRi.js";import{i as F}from"./browser-image-compression-BzWLnoYn.js";import{T as I}from"./ToolContent-DrkA_-Xz.js";import"./BaseFileInput-CTIURbfW.js";import"./ContentPaste-CJSvfBhK.js";import"./InputFooter-Cia2zmGJ.js";import"./grey-pattern-DMflWW5d.js";import"./lodash-jIFHsyXN.js";import"./ResultFooter-DAeFmDVK.js";import"./TextField-DeGHHacn.js";const y={rate:"50"};S({});function D({title:c}){const[a,p]=i.useState(null),[x,d]=i.useState(null),[m,g]=i.useState(null),[l,h]=i.useState(null),C=async(t,o)=>{if(!t)return;g(t.size);const s={maxSizeMB:1,maxWidthOrHeight:1024,quality:o/100,useWebWorker:!0};try{const r=await F(t,s);d(r),h(r.size)}catch(r){console.error("Error during compression:",r)}},j=(t,o)=>{if(!o)return;const{rate:s}=t;C(o,Number(s))};return e.jsx(I,{title:c,input:a,inputComponent:e.jsx(z,{value:a,onChange:p,accept:["image/png"],title:"Input PNG"}),resultComponent:e.jsx(T,{title:"Compressed PNG",value:x,extension:"png"}),initialValues:y,getGroups:({values:t,updateField:o})=>[{title:"Compression options",component:e.jsx(n,{children:e.jsx(f,{value:t.rate,onOwnChange:s=>o("rate",s),description:"Compression rate (1-100)"})})},{title:"File sizes",component:e.jsx(n,{children:e.jsxs(n,{children:[m!==null&&e.jsxs(u,{children:["Original Size: ",(m/1024).toFixed(2)," KB"]}),l!==null&&e.jsxs(u,{children:["Compressed Size: ",(l/1024).toFixed(2)," KB"]})]})})}],compute:j,setInput:p})}export{D as default};
