import{a as u,r,j as o}from"./index-7JCrVMyd.js";import{T as d}from"./ToolContent-DrkA_-Xz.js";import{T as c}from"./ToolTextInput-pMJPolT7.js";import{T as x}from"./ToolTextResult-BPpE0Rrg.js";import{X as f}from"./fxp-CqQGn1qw.js";import"./TextField-DeGHHacn.js";import"./ContentPaste-CJSvfBhK.js";import"./InputFooter-Cia2zmGJ.js";import"./ResultFooter-DAeFmDVK.js";function X(e,s){const t=f.validate(e);return t===!0?"Valid XML":typeof t=="object"&&t.err?`Invalid XML: ${t.err.msg} (line ${t.err.line}, col ${t.err.col})`:"Invalid XML: Unknown error"}const T={},L=[{title:"Validate XML",description:"Check if an XML string is well-formed.",sampleText:"<root><item>1</item><item>2</item></root>",sampleResult:"Valid XML",sampleOptions:{}},{title:"Invalid XML",description:"Example of malformed XML.",sampleText:"<root><item>1</item><item>2</root>",sampleResult:"Invalid XML: ...",sampleOptions:{}}];function $({title:e,longDescription:s}){const{t}=u("xml"),[l,i]=r.useState(""),[n,a]=r.useState(""),m=(M,p)=>{a(X(p))};return o.jsx(d,{title:e,input:l,inputComponent:o.jsx(c,{value:l,onChange:i,placeholder:t("xmlValidator.placeholder")}),resultComponent:o.jsx(x,{value:n,extension:"txt"}),initialValues:T,exampleCards:L,getGroups:null,setInput:i,compute:m,toolInfo:{title:t("xmlValidator.toolInfo.title"),description:t("xmlValidator.toolInfo.description")}})}export{$ as default};
