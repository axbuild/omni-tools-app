import{a as g,r as x,j as u}from"./index-7JCrVMyd.js";import{T as w}from"./ToolTextInput-pMJPolT7.js";import{T as S}from"./ToolTextResult-BPpE0Rrg.js";import{R as k}from"./RadioWithTextField-DpQpVQSL.js";import{T as V}from"./TextFieldWithDesc-D98LnRRi.js";import{T as C}from"./ToolContent-DrkA_-Xz.js";import"./ContentPaste-CJSvfBhK.js";import"./InputFooter-Cia2zmGJ.js";import"./TextField-DeGHHacn.js";import"./ResultFooter-DAeFmDVK.js";import"./SimpleRadio-BbIGpl0h.js";import"./Radio-Clz2uSlr.js";import"./SwitchBase-CZaFkbti.js";function R(i,e){if(e<=0)throw new Error("Length must be a positive number");const r=[];for(let s=0;s<i.length;s+=e)r.push(i.slice(s,s+e));return r}function j(i,e){if(e<=0)throw new Error("Number of chunks must be a positive number");const r=i.length;if(r<e)throw new Error("Text length must be at least as long as the number of chunks");const s=Math.ceil(r/e);let o=[];for(let a=0;a<r;a+=s)o.push(i.slice(a,a+s));return o.length>e&&(o[e-1]=o.slice(e-1).join(""),o=o.slice(0,e)),o}function v(i,e,r,s,o,a,m,n,l){let t;switch(i){case"symbol":t=e.split(r);break;case"regex":t=e.split(new RegExp(s));break;case"length":t=R(e,o);break;case"chunks":t=j(e,a).map(p=>`${m}${p}${n}`)}return t.join(l)}const h={splitSeparatorType:"symbol",symbolValue:" ",regexValue:"/\\s+/",lengthValue:"16",chunksValue:"4",outputSeparator:"\\n",charBeforeChunk:"",charAfterChunk:""},O=[{title:"split.symbolTitle",description:"split.symbolDescription",type:"symbol"},{title:"split.regexTitle",type:"regex",description:"split.regexDescription"},{title:"split.lengthTitle",description:"split.lengthDescription",type:"length"},{title:"split.chunksTitle",description:"split.chunksDescription",type:"chunks"}],D=[{description:"split.outputSeparatorDescription",accessor:"outputSeparator"},{description:"split.charBeforeChunkDescription",accessor:"charBeforeChunk"},{description:"split.charAfterChunkDescription",accessor:"charAfterChunk"}],E=[{title:"Split German Numbers",description:"In this example, we break the text into pieces by two characters – a comma and space. As a result, we get a column of numbers from 1 to 10 in German.",sampleText:"1 - eins, 2 - zwei, 3 - drei, 4 - vier, 5 - fünf, 6 - sechs, 7 - sieben, 8 - acht, 9 - neun, 10 - zehn",sampleResult:`1 - eins
2 - zwei
3 - drei
4 - vier
5 - fünf
6 - sechs
7 - sieben
8 - acht
9 - neun
10 - zehn`,sampleOptions:{...h,symbolValue:",",splitSeparatorType:"symbol",outputSeparator:`
`}},{title:"Text Cleanup via a Regular Expression",description:"In this example, we use a super smart regular expression trick to clean-up the text. This regexp finds all non-alphabetic characters and splits the text into pieces by these non-alphabetic chars. As a result, we extract only those parts of the text that contain Latin letters and words.",sampleText:"Finding%№1.65*;?words()is'12#easy_",sampleResult:`Finding
words
is
easy`,sampleOptions:{...h,regexValue:"[^a-zA-Z]+",splitSeparatorType:"regex",outputSeparator:`
`}},{title:"Three-dot Output Separator",description:"This example splits the text by spaces and then places three dots between the words.",sampleText:"If you started with $0.01 and doubled your money every day, it would take 27 days to become a millionaire.",sampleResult:"If...you...started...with...$0.01...and...doubled...your...money...every...day,...it...would...take...27...days...to...become...a...millionaire.!",sampleOptions:{...h,symbolValue:"",splitSeparatorType:"symbol",outputSeparator:"..."}}];function q({title:i}){const{t:e}=g("string"),[r,s]=x.useState(""),[o,a]=x.useState(""),m=(n,l)=>{const{splitSeparatorType:t,outputSeparator:p,charBeforeChunk:c,charAfterChunk:d,chunksValue:b,symbolValue:f,regexValue:y,lengthValue:T}=n;a(v(t,l,f,y,Number(T),Number(b),c,d,p))};return u.jsx(C,{title:i,input:r,inputComponent:u.jsx(w,{value:r,onChange:s}),resultComponent:u.jsx(S,{title:e("split.resultTitle"),value:o}),initialValues:h,getGroups:({values:n,updateField:l})=>[{title:e("split.splitSeparatorOptions"),component:O.map(({title:t,description:p,type:c})=>u.jsx(k,{checked:c===n.splitSeparatorType,title:e(t),fieldName:"splitSeparatorType",description:e(p),value:n[`${c}Value`],onRadioClick:()=>l("splitSeparatorType",c),onTextChange:d=>l(`${c}Value`,d)},c))},{title:e("split.outputSeparatorOptions"),component:D.map(t=>u.jsx(V,{value:n[t.accessor],onOwnChange:p=>l(t.accessor,p),description:e(t.description)},t.accessor))}],compute:m,setInput:s,exampleCards:E})}export{q as default};
