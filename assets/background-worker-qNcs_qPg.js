const a="compress-pdf",i="protect-pdf";function u(){import("./gs-worker-B4VKADiJ.js")}var t;function f(e,s){const r=e.compressionLevel||"medium";let o;switch(r){case"low":o="/printer";break;case"medium":o="/ebook";break;case"high":o="/screen";break;default:o="/ebook"}var n=new XMLHttpRequest;n.open("GET",e.psDataURL),n.responseType="arraybuffer",n.onload=function(){console.log("onload"),self.URL.revokeObjectURL(e.psDataURL),t={preRun:[function(){self.Module.FS.writeFile("input.pdf",new Uint8Array(n.response))}],postRun:[function(){var l=self.Module.FS.readFile("output.pdf",{encoding:"binary"}),p=new Blob([l],{type:"application/octet-stream"}),d=self.URL.createObjectURL(p);s({pdfDataURL:d,url:e.url,type:a})}],arguments:["-sDEVICE=pdfwrite","-dCompatibilityLevel=1.4",`-dPDFSETTINGS=${o}`,"-DNOPAUSE","-dQUIET","-dBATCH","-sOutputFile=output.pdf","input.pdf"],print:function(l){},printErr:function(l){},totalDependencies:0,noExitRuntime:1},self.Module?(self.Module.calledRun=!1,self.Module.postRun=t.postRun,self.Module.preRun=t.preRun,self.Module.callMain()):(self.Module=t,u())},n.send()}function c(e,s){const r=e.password||"";if(!r){s({error:"Password is required for encryption",url:e.url});return}var o=new XMLHttpRequest;o.open("GET",e.psDataURL),o.responseType="arraybuffer",o.onload=function(){console.log("onload"),self.URL.revokeObjectURL(e.psDataURL),t={preRun:[function(){self.Module.FS.writeFile("input.pdf",new Uint8Array(o.response))}],postRun:[function(){var n=self.Module.FS.readFile("output.pdf",{encoding:"binary"}),l=new Blob([n],{type:"application/octet-stream"}),p=self.URL.createObjectURL(l);s({pdfDataURL:p,url:e.url,type:i})}],arguments:["-sDEVICE=pdfwrite","-dCompatibilityLevel=1.4",`-sOwnerPassword=${r}`,`-sUserPassword=${r}`,"-dEncryptionPermissions=-4","-DNOPAUSE","-dQUIET","-dBATCH","-sOutputFile=output.pdf","input.pdf"],print:function(n){},printErr:function(n){},totalDependencies:0,noExitRuntime:1},self.Module?(self.Module.calledRun=!1,self.Module.postRun=t.postRun,self.Module.preRun=t.preRun,self.Module.callMain()):(self.Module=t,u())},o.send()}self.addEventListener("message",function({data:e}){if(console.log("message",e),e.target!=="wasm")return;console.log("Message received from main script",e.data);const s=({pdfDataURL:r,type:o})=>{self.postMessage(r)};e.data.type===a?f(e.data,s):e.data.type===i&&c(e.data,s)});console.log("Worker ready");
