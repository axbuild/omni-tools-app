import{r as j,j as x,B}from"./index-7JCrVMyd.js";import{c as L}from"./index.esm-Cob4-rpC.js";import{T as O}from"./ToolFileResult-Div6pbTm.js";import{C as T}from"./ColorSelector-C-ZQjJzA.js";import{C as $}from"./index-CFrAXb6N.js";import{T as k}from"./TextFieldWithDesc-D98LnRRi.js";import{T as H}from"./ToolContent-DrkA_-Xz.js";import{T as P}from"./ToolImageInput-BfRmeQE8.js";import{a as b}from"./color-zwma1Zlz.js";import"./ContentPaste-CJSvfBhK.js";import"./grey-pattern-DMflWW5d.js";import"./ResultFooter-DAeFmDVK.js";import"./TextField-DeGHHacn.js";import"./BaseFileInput-CTIURbfW.js";import"./InputFooter-Cia2zmGJ.js";import"./lodash-jIFHsyXN.js";const U=async(s,e,t,c,p)=>{if(s.type==="image/svg+xml"){const r=new FileReader;r.onload=u=>{var C;if(!((C=u.target)!=null&&C.result))return;let a=u.target.result;const f=W(t[0],t[1],t[2]),I=new RegExp("#[0-9a-f]{3}\\b","gi"),y=new RegExp("#[0-9a-f]{6}\\b","gi");a=a.replace(I,o=>{const g="#"+o[1]+o[1]+o[2]+o[2]+o[3]+o[3],d=v(g);return d&&b(d,e,c)?f:o}),a=a.replace(y,o=>{const g=v(o);return g&&b(g,e,c)?f:o});const E=new RegExp("rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)","gi");a=a.replace(E,(o,g,d,R)=>{const w=[parseInt(g),parseInt(d),parseInt(R)];return b(w,e,c)?`rgb(${t[0]}, ${t[1]}, ${t[2]})`:o});const F=new RegExp("rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)","gi");a=a.replace(F,(o,g,d,R,w)=>{const D=[parseInt(g),parseInt(d),parseInt(R)];return b(D,e,c)?`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${w})`:o}),Object.entries({red:[255,0,0],green:[0,128,0],blue:[0,0,255],black:[0,0,0],white:[255,255,255]}).forEach(([o,g])=>{if(b(g,e,c)){const d=new RegExp(`\\b${o}\\b`,"gi");a=a.replace(d,f)}});const S=new File([a],s.name,{type:"image/svg+xml"});p(S)},r.readAsText(s);return}const m=document.createElement("canvas"),h=m.getContext("2d");if(h==null)return;const i=new Image;i.src=URL.createObjectURL(s),await i.decode(),m.width=i.width,m.height=i.height,h.drawImage(i,0,0);const l=h.getImageData(0,0,m.width,m.height),n=l.data;for(let r=0;r<n.length;r+=4){const u=[n[r],n[r+1],n[r+2]];b(u,e,c)&&(n[r]=t[0],n[r+1]=t[1],n[r+2]=t[2])}h.putImageData(l,0,0),m.toBlob(r=>{if(r){const u=new File([r],s.name,{type:s.type});p(u)}},s.type)},W=(s,e,t)=>"#"+[s,e,t].map(c=>{const p=c.toString(16);return p.length===1?"0"+p:p}).join(""),v=s=>{const e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(s);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:null},A={fromColor:"white",toColor:"black",similarity:"10"},G=L({});function ae({title:s}){const[e,t]=j.useState(null),[c,p]=j.useState(null),m=(i,l)=>{if(!l)return;const{fromColor:n,toColor:r,similarity:u}=i;let a,f;try{a=$(n).rgb().array(),f=$(r).rgb().array()}catch{return}U(l,a,f,Number(u),p)},h=({values:i,updateField:l})=>[{title:"From color and to color",component:x.jsxs(B,{children:[x.jsx(T,{value:i.fromColor,onColorChange:n=>l("fromColor",n),description:"Replace this color (from color)",inputProps:{"data-testid":"from-color-input"}}),x.jsx(T,{value:i.toColor,onColorChange:n=>l("toColor",n),description:"With this color (to color)",inputProps:{"data-testid":"to-color-input"}}),x.jsx(k,{value:i.similarity,onOwnChange:n=>l("similarity",n),description:"Match this % of similar colors of the from color. For example, 10% white will match white and a little bit of gray."})]})}];return x.jsx(H,{title:s,initialValues:A,getGroups:h,compute:m,input:e,validationSchema:G,inputComponent:x.jsx(P,{value:e,onChange:t,accept:["image/*"],title:"Input image"}),resultComponent:x.jsx(O,{title:"Result image",value:c})})}export{ae as default};
