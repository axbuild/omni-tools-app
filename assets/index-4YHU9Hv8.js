import{i as I,k as A,j as t,a as b,d as R,r as h,J as T,B as x,T as v}from"./index-7JCrVMyd.js";import{T as L}from"./ToolContent-DrkA_-Xz.js";import{I as M}from"./ContentPaste-CJSvfBhK.js";import{I as _}from"./InputFooter-Cia2zmGJ.js";import{T as y}from"./ToolFileResult-Div6pbTm.js";import{f as k,F as N}from"./index-on_GoYzL.js";import{R as S}from"./RadioGroup-C6kaQY45.js";import{F as W}from"./FormControlLabel-Bkvpm43S.js";import{R as $}from"./Radio-Clz2uSlr.js";import"./TextField-DeGHHacn.js";import"./grey-pattern-DMflWW5d.js";import"./ResultFooter-DAeFmDVK.js";import"./FormGroup-DuLNvNQv.js";import"./SwitchBase-CZaFkbti.js";var j={},B=A;Object.defineProperty(j,"__esModule",{value:!0});var C=j.default=void 0,E=B(I()),V=t;C=j.default=(0,E.default)((0,V.jsx)("path",{d:"M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3z"}),"MusicNote");function q({value:o,onChange:m,accept:a,title:s,type:u}){const{t:l}=b();R();const d=h.useRef(null);h.useContext(T);const c=e=>{const r=e.target.files;r&&m([...o,...Array.from(r).map(i=>({file:i,order:o.length}))])},f=()=>{var e;(e=d.current)==null||e.click()};function g(){m([])}function p(e){return e.length>15?e.slice(0,15)+"...":e}return t.jsxs(x,{children:[t.jsx(M,{title:s||l("toolMultipleAudioInput.inputTitle",{type:u.charAt(0).toUpperCase()+u.slice(1)})}),t.jsx(x,{sx:{width:"100%",height:"300px",border:o!=null&&o.length?0:1,borderRadius:2,boxShadow:"5",bgcolor:"background.paper",position:"relative"},children:t.jsx(x,{width:"100%",height:"100%",sx:{overflow:"auto",display:"flex",alignItems:"center",justifyContent:"center",flexWrap:"wrap",position:"relative"},children:o!=null&&o.length?o.map((e,r)=>t.jsxs(x,{sx:{margin:1,display:"flex",alignItems:"center",justifyContent:"space-between",width:"200px",border:1,borderRadius:1,padding:1},children:[t.jsxs(x,{sx:{display:"flex",alignItems:"center"},children:[t.jsx(C,{}),t.jsx(v,{sx:{marginLeft:1},children:p(e.file.name)})]}),t.jsx(x,{sx:{cursor:"pointer"},onClick:()=>{const i=o.filter((F,w)=>w!==r);m(i)},children:"âœ–"})]},r)):t.jsx(v,{variant:"body2",color:"text.secondary",children:l("toolMultipleAudioInput.noFilesSelected")})})}),t.jsx(_,{handleImport:f,handleClear:g}),t.jsx("input",{ref:d,style:{display:"none"},type:"file",accept:a.join(","),onChange:c,multiple:!0})]})}const n=new N;async function O(o,m){if(n.loaded||await n.load({wasmURL:"https://cdn.jsdelivr.net/npm/@ffmpeg/core@0.12.9/dist/esm/ffmpeg-core.wasm"}),o.length===0)throw new Error("No input files provided");const{outputFormat:a}=m,s=`output.${a}`,u=[];for(let e=0;e<o.length;e++){const r=`input${e}`,i=`temp${e}.wav`;await n.writeFile(r,await k(o[e])),await n.exec(["-i",r,"-acodec","pcm_s16le","-ar","44100","-ac","2",i]),u.push(i),await n.deleteFile(r)}const l="filelist.txt",d=u.map(e=>`file '${e}'`).join(`
`);await n.writeFile(l,d);const c="concat.wav";await n.exec(["-f","concat","-safe","0","-i",l,"-c","copy",c]);let f=c;if(a!=="wav"){const e=["-i",c];a==="mp3"?e.push("-ar","44100","-ac","2","-b:a","192k","-f","mp3",s):a==="aac"&&e.push("-c:a","aac","-b:a","192k","-f","adts",s),await n.exec(e),f=s}const g=await n.readFile(f);let p="audio/wav";a==="mp3"&&(p="audio/mp3"),a==="aac"&&(p="audio/aac");for(const e of u)await n.deleteFile(e);return await n.deleteFile(l),await n.deleteFile(c),a!=="wav"&&await n.deleteFile(s),new File([new Blob([g],{type:p})],`merged_audio.${a}`,{type:p})}const D={outputFormat:"mp3"},G=[{label:"MP3",value:"mp3"},{label:"AAC",value:"aac"},{label:"WAV",value:"wav"}];function ie({title:o,longDescription:m}){const{t:a}=b("audio"),[s,u]=h.useState([]),[l,d]=h.useState(null),[c,f]=h.useState(!1),g=async(e,r)=>{if(r.length!==0){f(!0);try{const i=r.map(w=>w.file),F=await O(i,e);d(F)}catch(i){console.error(`Failed to merge audio: ${i}`),d(null)}finally{f(!1)}}},p=({values:e,updateField:r})=>[{title:a("mergeAudio.outputFormat"),component:t.jsx(x,{mt:2,children:t.jsx(S,{row:!0,value:e.outputFormat,onChange:i=>r("outputFormat",i.target.value),children:G.map(i=>t.jsx(W,{value:i.value,control:t.jsx($,{}),label:i.label},i.value))})})}];return t.jsx(L,{title:o,input:s,inputComponent:t.jsx(q,{value:s,onChange:u,accept:["audio/*",".mp3",".wav",".aac"],title:a("mergeAudio.inputTitle"),type:"audio"}),resultComponent:c?t.jsx(y,{title:a("mergeAudio.mergingAudio"),value:null,loading:!0}):t.jsx(y,{title:a("mergeAudio.resultTitle"),value:l,extension:l?l.name.split(".").pop():void 0}),initialValues:D,getGroups:p,setInput:u,compute:g,toolInfo:{title:a("mergeAudio.toolInfo.title",{title:o}),description:m}})}export{ie as default};
