import{a as T,r as u,j as g,B as E,T as h}from"./index-7JCrVMyd.js";import{T as C}from"./ToolFileResult-Div6pbTm.js";import{T as F}from"./TextFieldWithDesc-D98LnRRi.js";import{T as N}from"./ToolContent-DrkA_-Xz.js";import{P as x}from"./PDFButton-BHQNOqBC.js";import{T as j}from"./ToolPdfInput-CYdTNe9U.js";import"./ContentPaste-CJSvfBhK.js";import"./grey-pattern-DMflWW5d.js";import"./ResultFooter-DAeFmDVK.js";import"./TextField-DeGHHacn.js";import"./BaseFileInput-CTIURbfW.js";import"./InputFooter-Cia2zmGJ.js";import"./lodash-jIFHsyXN.js";function y(c,t){if(!c.trim())return Array.from({length:t},(i,o)=>o+1);const s=new Set,l=c.split(",");for(const i of l){const o=i.trim();if(o.includes("-")){const[e,f]=o.split("-").map(Number);if(!isNaN(e)&&!isNaN(f)){const p=Math.min(e,f),d=Math.max(e,f);for(let n=Math.max(1,p);n<=Math.min(t,d);n++)s.add(n)}}else{const e=parseInt(o,10);!isNaN(e)&&e>=1&&e<=t&&s.add(e)}}return[...s].sort((i,o)=>i-o)}async function v(c,t){const s=await c.arrayBuffer(),l=await x.load(s),i=l.getPageCount(),o=y(t,i),e=await x.create();(await e.copyPages(l,o.map(n=>n-1))).forEach(n=>e.addPage(n));const p=await e.save(),d=c.name.replace(".pdf","-extracted.pdf");return new File([p],d,{type:"application/pdf"})}const D={pageRanges:""},I=[{title:"Extract Specific Pages",description:"Extract pages 1, 5, 6, 7, and 8 from a PDF document.",sampleText:"",sampleResult:"",sampleOptions:{pageRanges:"1,5-8"}},{title:"Extract First and Last Pages",description:"Extract only the first and last pages from a PDF document.",sampleText:"",sampleResult:"",sampleOptions:{pageRanges:"1,10"}},{title:"Extract a Range of Pages",description:"Extract a continuous range of pages from a PDF document.",sampleText:"",sampleResult:"",sampleOptions:{pageRanges:"3-7"}}];function q({title:c}){const{t}=T("pdf"),[s,l]=u.useState(null),[i,o]=u.useState(null),[e,f]=u.useState(!1),[p,d]=u.useState(0),[n,P]=u.useState("");u.useEffect(()=>{(async()=>{if(!s){d(0);return}try{const a=await s.arrayBuffer(),r=await x.load(a);d(r.getPageCount())}catch(a){console.error("Error getting PDF info:",a),d(0)}})()},[s]);const w=m=>{const{pageRanges:a}=m;if(!p||!(a!=null&&a.trim())){P("");return}try{const r=y(a,p).length;P(t("splitPdf.pageExtractionPreview",{count:r}))}catch{P("")}},R=async(m,a)=>{if(a)try{f(!0);const r=await v(a,m.pageRanges);o(r)}catch(r){throw new Error("Error splitting PDF:"+r)}finally{f(!1)}};return g.jsx(N,{title:c,input:s,setInput:l,initialValues:D,compute:R,exampleCards:I,inputComponent:g.jsx(j,{value:s,onChange:l,accept:["application/pdf"],title:t("splitPdf.inputTitle")}),resultComponent:g.jsx(C,{title:t("splitPdf.resultTitle"),value:i,extension:"pdf",loading:e,loadingText:t("splitPdf.extractingPages")}),getGroups:({values:m,updateField:a})=>[{title:t("splitPdf.pageSelection"),component:g.jsxs(E,{children:[p>0&&g.jsx(h,{variant:"body2",sx:{mb:1},children:t("splitPdf.pdfPageCount",{count:p})}),g.jsx(F,{value:m.pageRanges,onOwnChange:r=>{a("pageRanges",r)},description:t("splitPdf.pageRangesDescription"),placeholder:t("splitPdf.pageRangesPlaceholder")}),n&&g.jsx(h,{variant:"body2",sx:{mt:1,color:"primary.main"},children:n})]})}],onValuesChange:w,toolInfo:{title:t("splitPdf.toolInfo.title"),description:t("splitPdf.toolInfo.description")}})}export{q as default};
