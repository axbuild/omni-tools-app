import{aF as h,a as x,r as u,j as a,B as d}from"./index-7JCrVMyd.js";import{T as f}from"./ToolContent-DrkA_-Xz.js";import{T as U}from"./ToolTextInput-pMJPolT7.js";import{T as g}from"./ToolTextResult-BPpE0Rrg.js";import{C as T}from"./CheckboxWithDesc-Q6HObWmX.js";import"./TextField-DeGHHacn.js";import"./ContentPaste-CJSvfBhK.js";import"./InputFooter-Cia2zmGJ.js";import"./ResultFooter-DAeFmDVK.js";import"./FormControlLabel-Bkvpm43S.js";import"./Checkbox-Sy-FfrtZ.js";import"./SwitchBase-CZaFkbti.js";function C(i,e){if(!h(i))return"";const n=parseInt(i,10),t=new Date(n*1e3);if(e){const c=t.getFullYear(),r=String(t.getMonth()+1).padStart(2,"0"),m=String(t.getDate()).padStart(2,"0"),l=String(t.getHours()).padStart(2,"0"),o=String(t.getMinutes()).padStart(2,"0"),s=String(t.getSeconds()).padStart(2,"0");return`${c}-${r}-${m} ${l}:${o}:${s}`}else return t.toISOString().replace("T"," ").replace("Z","")}function L(i,e,n){const t=[];return i.split(`
`).forEach(r=>{const l=r.split(" ")[0],o=C(l,n),s=!n&&e?" UTC":"";t.push(o?`${o}${s}`:"")}),t.join(`
`)}const D={withLabel:!0,useLocalTime:!1},b=[{title:"Basic Unix Time to Date",description:"This example shows how Unix timestamps are converted into human-readable dates. Each timestamp represents the number of seconds that have elapsed since January 1, 1970 (UTC).",sampleText:`0
1721287227
2147483647`,sampleResult:`1970-01-01 00:00:00:000 UTC
2024-07-18 10:00:27:000 UTC
2038-01-19 03:14:07:000 UTC`,sampleOptions:{withLabel:!0,useLocalTime:!1}},{title:"Without UTC Suffix",description:"In this example, the UTC suffix is removed from the output. This might be useful for embedding timestamps into other formats or for cleaner display.",sampleText:`1234567890
1672531199`,sampleResult:`2009-02-13 23:31:30
2022-12-31 23:59:59:000`,sampleOptions:{withLabel:!1,useLocalTime:!1}},{title:"Use Local Time",description:"This example demonstrates how timestamps are shown in your local timezone rather than UTC. The UTC suffix is omitted in this case.",sampleText:"1721287227",sampleResult:"2024-07-18 12:00:27",sampleOptions:{withLabel:!0,useLocalTime:!0}}];function M({title:i}){const{t:e}=x("time"),[n,t]=u.useState(""),[c,r]=u.useState(""),m=(o,s)=>{r(L(s,o.withLabel,o.useLocalTime))},l=({values:o,updateField:s})=>[{title:e("convertUnixToDate.withLabel"),component:a.jsxs(d,{children:[a.jsx(T,{onChange:p=>s("withLabel",p),checked:o.withLabel,title:e("convertUnixToDate.addUtcLabel"),description:e("convertUnixToDate.addUtcLabelDescription")}),a.jsx(T,{onChange:p=>s("useLocalTime",p),checked:o.useLocalTime,title:e("convertUnixToDate.useLocalTime"),description:e("convertUnixToDate.useLocalTimeDescription")})]})}];return a.jsx(f,{title:i,input:n,inputComponent:a.jsx(U,{value:n,onChange:t}),resultComponent:a.jsx(g,{value:c}),initialValues:D,exampleCards:b,getGroups:l,setInput:t,compute:m,toolInfo:{title:e("convertUnixToDate.toolInfo.title"),description:e("convertUnixToDate.toolInfo.description")}})}export{M as default};
