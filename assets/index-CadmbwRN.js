import{a as p,r as h,j as s,B as b}from"./index-7JCrVMyd.js";import{T as g}from"./ToolContent-DrkA_-Xz.js";import{T as w}from"./ToolTextResult-BPpE0Rrg.js";import{T as x}from"./TextFieldWithDesc-D98LnRRi.js";import{F as f}from"./FormGroup-DuLNvNQv.js";import{F as l}from"./FormControlLabel-Bkvpm43S.js";import{C as c}from"./Checkbox-Sy-FfrtZ.js";import"./TextField-DeGHHacn.js";import"./ContentPaste-CJSvfBhK.js";import"./ResultFooter-DAeFmDVK.js";import"./SwitchBase-CZaFkbti.js";function j(a){const r=parseInt(a.length||"",10);if(isNaN(r)||r<=0)return"";let t="";const i="abcdefghijklmnopqrstuvwxyz",u="ABCDEFGHIJKLMNOPQRSTUVWXYZ",d="0123456789",o="!@#$%^&*()_+~`|}{[]:;?><,./-=";if(a.includeLowercase&&(t+=i),a.includeUppercase&&(t+=u),a.includeNumbers&&(t+=d),a.includeSymbols&&(t+=o),a.avoidAmbiguous){const e=new Set(["i","I","l","0","O"]);t=Array.from(t).filter(m=>!e.has(m)).join("")}if(!t)return"";let n="";for(let e=0;e<r;e++){const m=Math.floor(Math.random()*t.length);n+=t[m]}return n}const G={length:"12",includeLowercase:!0,includeUppercase:!0,includeNumbers:!0,includeSymbols:!0,avoidAmbiguous:!1},y=[{title:"Strong Password (12 characters)",description:"Generate a secure password with all character types including symbols.",sampleText:"",sampleResult:"A7#mK9$pL2@x",sampleOptions:{length:"12",includeLowercase:!0,includeUppercase:!0,includeNumbers:!0,includeSymbols:!0,avoidAmbiguous:!1}},{title:"Simple Password (8 characters)",description:"Generate a basic password with letters and numbers only.",sampleText:"",sampleResult:"Ab3mK9pL",sampleOptions:{length:"8",includeLowercase:!0,includeUppercase:!0,includeNumbers:!0,includeSymbols:!1,avoidAmbiguous:!1}},{title:"Clear Password (No ambiguous)",description:"Generate a password without ambiguous characters (i, I, l, 0, O).",sampleText:"",sampleResult:"A7#mK9$pL2@x",sampleOptions:{length:"12",includeLowercase:!0,includeUppercase:!0,includeNumbers:!0,includeSymbols:!0,avoidAmbiguous:!0}}];function R({title:a}){const{t:r}=p("string"),[t,i]=h.useState("");function u(o){i(j(o))}const d=({values:o,updateField:n})=>[{title:r("passwordGenerator.optionsTitle"),component:s.jsxs(b,{sx:{display:"flex",gap:2,flexDirection:"column"},children:[s.jsx(x,{description:r("passwordGenerator.lengthDesc"),placeholder:r("passwordGenerator.lengthPlaceholder"),value:o.length,onOwnChange:e=>n("length",e),type:"number"}),s.jsxs(f,{children:[s.jsx(l,{control:s.jsx(c,{checked:o.includeLowercase,onChange:e=>n("includeLowercase",e.target.checked)}),label:r("passwordGenerator.includeLowercase")}),s.jsx(l,{control:s.jsx(c,{checked:o.includeUppercase,onChange:e=>n("includeUppercase",e.target.checked)}),label:r("passwordGenerator.includeUppercase")}),s.jsx(l,{control:s.jsx(c,{checked:o.includeNumbers,onChange:e=>n("includeNumbers",e.target.checked)}),label:r("passwordGenerator.includeNumbers")}),s.jsx(l,{control:s.jsx(c,{checked:o.includeSymbols,onChange:e=>n("includeSymbols",e.target.checked)}),label:r("passwordGenerator.includeSymbols")}),s.jsx(l,{control:s.jsx(c,{checked:o.avoidAmbiguous,onChange:e=>n("avoidAmbiguous",e.target.checked)}),label:r("passwordGenerator.avoidAmbiguous")})]})]})}];return s.jsx(g,{title:a,initialValues:G,getGroups:d,compute:u,resultComponent:s.jsx(w,{title:r("passwordGenerator.resultTitle"),value:t}),toolInfo:{title:r("passwordGenerator.toolInfo.title"),description:r("passwordGenerator.toolInfo.description")},exampleCards:y})}export{R as default};
